var __defProp = Object.defineProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var ClientEngineType;
(function(ClientEngineType2) {
  ClientEngineType2["Library"] = "library";
  ClientEngineType2["Binary"] = "binary";
  ClientEngineType2["DataProxy"] = "dataproxy";
})(ClientEngineType || (ClientEngineType = {}));
const DEFAULT_CLIENT_ENGINE_TYPE = ClientEngineType.Library;
function getClientEngineType(generatorConfig) {
  const engineTypeFromEnvVar = getEngineTypeFromEnvVar();
  if (engineTypeFromEnvVar)
    return engineTypeFromEnvVar;
  if (generatorConfig?.config.engineType === ClientEngineType.Library) {
    return ClientEngineType.Library;
  } else if (generatorConfig?.config.engineType === ClientEngineType.Binary) {
    return ClientEngineType.Binary;
  } else if (generatorConfig?.config.engineType === ClientEngineType.DataProxy) {
    return ClientEngineType.DataProxy;
  } else {
    return DEFAULT_CLIENT_ENGINE_TYPE;
  }
}
__name(getClientEngineType, "getClientEngineType");
function getEngineTypeFromEnvVar() {
  const engineType = process.env.PRISMA_CLIENT_ENGINE_TYPE;
  if (engineType === ClientEngineType.Library) {
    return ClientEngineType.Library;
  } else if (engineType === ClientEngineType.Binary) {
    return ClientEngineType.Binary;
  } else if (engineType === ClientEngineType.DataProxy) {
    return ClientEngineType.DataProxy;
  } else {
    return void 0;
  }
}
__name(getEngineTypeFromEnvVar, "getEngineTypeFromEnvVar");
export {
  ClientEngineType,
  DEFAULT_CLIENT_ENGINE_TYPE,
  getClientEngineType
};
