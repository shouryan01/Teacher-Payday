var __defProp = Object.defineProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
import { GeneratorProcess } from "@prisma/generator-helper";
import { parseEnvValue } from "./utils/parseEnvValue";
class Generator {
  constructor(executablePath, config, isNode) {
    this.manifest = null;
    this.config = config;
    this.generatorProcess = new GeneratorProcess(executablePath, isNode);
  }
  async init() {
    await this.generatorProcess.init();
    this.manifest = await this.generatorProcess.getManifest(this.config);
  }
  stop() {
    this.generatorProcess.stop();
  }
  generate() {
    if (!this.options) {
      throw new Error(`Please first run .setOptions() on the Generator to initialize the options`);
    }
    return this.generatorProcess.generate(this.options);
  }
  setOptions(options) {
    this.options = options;
  }
  setBinaryPaths(binaryPaths) {
    if (!this.options) {
      throw new Error(`Please first run .setOptions() on the Generator to initialize the options`);
    }
    this.options.binaryPaths = binaryPaths;
  }
  getPrettyName() {
    return this.manifest?.prettyName ?? this.getProvider();
  }
  getProvider() {
    return parseEnvValue(this.config.provider);
  }
}
__name(Generator, "Generator");
export {
  Generator
};
