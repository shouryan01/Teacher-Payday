var __defProp = Object.defineProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
import { getSchemaPath } from "./getSchema";
import { arg } from "./utils";
import crypto from "crypto";
async function getProjectHash() {
  const args = arg(process.argv.slice(3), { "--schema": String });
  let projectPath = await getSchemaPath(args["--schema"]);
  projectPath = projectPath || process.cwd();
  return crypto.createHash("sha256").update(projectPath).digest("hex").substring(0, 8);
}
__name(getProjectHash, "getProjectHash");
function getCLIPathHash() {
  const cliPath = process.argv[1];
  return crypto.createHash("sha256").update(cliPath).digest("hex").substring(0, 8);
}
__name(getCLIPathHash, "getCLIPathHash");
export {
  getCLIPathHash,
  getProjectHash
};
