var __defProp = Object.defineProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
import chalk from "chalk";
import path from "path";
import { getClientEngineType } from "../client/getClientEngineType";
import { formatms } from "../utils/formatms";
import { parseEnvValue } from "../utils/parseEnvValue";
function getGeneratorSuccessMessage(generator, time) {
  const name = generator.getPrettyName();
  const version = formatVersion(generator);
  const to = formatOutput(generator);
  return `\u2714 Generated ${chalk.bold(name)}${version ? ` (${version})` : ""}${to} in ${formatms(time)}`;
}
__name(getGeneratorSuccessMessage, "getGeneratorSuccessMessage");
function formatVersion(generator) {
  const version = generator.manifest?.version;
  if (generator.getProvider() === "prisma-client-js") {
    const engineType = getClientEngineType(generator.config);
    return version ? `${version} | ${engineType}` : engineType;
  }
  return version;
}
__name(formatVersion, "formatVersion");
function formatOutput(generator) {
  const output = generator.options?.generator.output;
  return output ? chalk.dim(` to .${path.sep}${path.relative(process.cwd(), parseEnvValue(output))}`) : "";
}
__name(formatOutput, "formatOutput");
export {
  getGeneratorSuccessMessage
};
