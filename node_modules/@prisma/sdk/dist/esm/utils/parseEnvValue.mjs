var __defProp = Object.defineProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
import chalk from "chalk";
function parseEnvValue(object) {
  if (object.fromEnvVar && object.fromEnvVar != "null") {
    const value = process.env[object.fromEnvVar];
    if (!value) {
      throw new Error(`Attempted to load provider value using \`env(${object.fromEnvVar})\` but it was not present. Please ensure that ${chalk.dim(object.fromEnvVar)} is present in your Environment Variables`);
    }
    return value;
  }
  return object.value;
}
__name(parseEnvValue, "parseEnvValue");
function parseBinaryTargetsEnvValue(object) {
  if (object.fromEnvVar && object.fromEnvVar != "null") {
    const value = process.env[object.fromEnvVar];
    if (!value) {
      throw new Error(`Attempted to load binaryTargets value using \`env(${object.fromEnvVar})\` but it was not present. Please ensure that ${chalk.dim(object.fromEnvVar)} is present in your Environment Variables`);
    }
    return JSON.parse(value);
  }
  return object.value;
}
__name(parseBinaryTargetsEnvValue, "parseBinaryTargetsEnvValue");
export {
  parseBinaryTargetsEnvValue,
  parseEnvValue
};
