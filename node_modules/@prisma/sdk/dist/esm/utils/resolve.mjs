var __defProp = Object.defineProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
import { default as _resolve } from "resolve";
import path from "path";
async function resolve(id, options) {
  const _options = { preserveSymlinks: false, ...options };
  return new Promise((res) => {
    _resolve(id, _options, (e, v) => {
      if (e)
        res(void 0);
      res(v);
    });
  });
}
__name(resolve, "resolve");
async function resolvePkg(id, options) {
  const resolvedPath = await resolve(`${id}/package.json`, options);
  return resolvedPath && path.dirname(resolvedPath);
}
__name(resolvePkg, "resolvePkg");
export {
  resolve,
  resolvePkg
};
