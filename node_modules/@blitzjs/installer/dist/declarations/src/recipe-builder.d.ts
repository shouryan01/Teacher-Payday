import * as AddDependencyExecutor from './executors/add-dependency-executor';
import * as TransformFileExecutor from './executors/file-transform-executor';
import * as NewFileExecutor from './executors/new-file-executor';
import * as PrintMessageExecutor from './executors/print-message-executor';
import * as RunCommandExecutor from './executors/run-command-executor';
import { RecipeExecutor } from './recipe-executor';
export interface IRecipeBuilder {
    setName(name: string): IRecipeBuilder;
    setDescription(description: string): IRecipeBuilder;
    printMessage(step: Omit<Omit<PrintMessageExecutor.Config, 'stepType'>, 'explanation'>): IRecipeBuilder;
    setOwner(owner: string): IRecipeBuilder;
    setRepoLink(repoLink: string): IRecipeBuilder;
    addAddDependenciesStep(step: Omit<AddDependencyExecutor.Config, 'stepType'>): IRecipeBuilder;
    addNewFilesStep(step: Omit<NewFileExecutor.Config, 'stepType'>): IRecipeBuilder;
    addTransformFilesStep(step: Omit<TransformFileExecutor.Config, 'stepType'>): IRecipeBuilder;
    addRunCommandStep(step: Omit<RunCommandExecutor.Config, 'stepType'>): IRecipeBuilder;
    build(): RecipeExecutor<any>;
}
export declare function RecipeBuilder(): IRecipeBuilder;
