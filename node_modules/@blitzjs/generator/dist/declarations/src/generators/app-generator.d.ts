import { Generator, GeneratorOptions, SourceRootType } from "../generator";
declare type TemplateConfig = {
    path: string;
    skipForms?: boolean;
    skipDatabase?: boolean;
};
export interface AppGeneratorOptions extends GeneratorOptions {
    template: TemplateConfig;
    appName: string;
    useTs: boolean;
    yarn: boolean;
    pnpm?: boolean;
    version: string;
    skipInstall: boolean;
    skipGit: boolean;
    form?: "React Final Form" | "React Hook Form" | "Formik";
    onPostInstall?: () => Promise<void>;
}
export declare class AppGenerator extends Generator<AppGeneratorOptions> {
    sourceRoot: SourceRootType;
    prettierDisabled: boolean;
    packageInstallSuccess: boolean;
    filesToIgnore(): string[];
    getTemplateValues(): Promise<{
        name: string;
        safeNameSlug: string;
        username: string | undefined;
    }>;
    getTargetDirectory(): string;
    preCommit(): Promise<void>;
    postWrite(): Promise<void>;
    preventFileFromLogging(path: string): boolean;
    commitChanges(): void;
    private updateForms;
    private get pkgManager();
}
export {};
