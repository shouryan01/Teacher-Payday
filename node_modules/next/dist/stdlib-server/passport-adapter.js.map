{"version":3,"sources":["../../stdlib-server/passport-adapter.ts"],"sourcesContent":["/* @eslint-disable no-redeclare */\nimport { baseLogger } from '../server/lib/logging'\nimport cookieSession from 'cookie-session'\nimport passport from 'passport'\nimport type { AuthenticateOptions, Strategy } from 'passport'\nimport { connectMiddleware, secureProxyMiddleware } from './middleware'\nimport {\n  getAndValidateMiddleware,\n  handleRequestWithMiddleware,\n} from '../server/middleware'\nimport { isLocalhost } from './index'\nimport { loadConfigAtRuntime } from '../server/config-shared'\nimport {\n  NextApiHandler,\n  NextApiRequest,\n  NextApiResponse,\n  ConnectMiddleware,\n  Ctx,\n  Middleware,\n  SessionContext,\n  PublicData,\n} from '../shared/lib/utils'\n\nfunction assert(condition: any, message: string): asserts condition {\n  if (!condition) throw new Error(message)\n}\n\nconst isFunction = (functionToCheck: any): functionToCheck is Function =>\n  typeof functionToCheck === 'function'\n\nconst isVerifyCallbackResult = (\n  value: unknown\n): value is VerifyCallbackResult =>\n  typeof value === 'object' && value !== null && 'publicData' in value\n\nconst INTERNAL_REDIRECT_URL_KEY = '_redirectUrl'\n\nexport interface BlitzPassportConfigCallbackParams {\n  ctx: Ctx\n  req: NextApiRequest\n  res: NextApiResponse\n}\n\nexport type BlitzPassportConfigCallback = ({\n  ctx,\n  req,\n  res,\n}: BlitzPassportConfigCallbackParams) => BlitzPassportConfigObject\n\nexport type BlitzPassportConfig =\n  | BlitzPassportConfigObject\n  | BlitzPassportConfigCallback\n\nexport type BlitzPassportStrategy = {\n  authenticateOptions?: AuthenticateOptions\n  strategy: Strategy\n}\n\nexport type BlitzPassportConfigObject = {\n  successRedirectUrl?: string\n  errorRedirectUrl?: string\n  strategies: BlitzPassportStrategy[]\n  secureProxy?: boolean\n}\n\nexport type VerifyCallbackResult = {\n  publicData: PublicData\n  privateData?: Record<string, any>\n  redirectUrl?: string\n}\n\nexport function passportAuth(config: BlitzPassportConfig): NextApiHandler {\n  return async function authHandler(req, res) {\n    const log = baseLogger().getChildLogger()\n    const appConfig = loadConfigAtRuntime()\n    const globalMiddleware = getAndValidateMiddleware(\n      appConfig,\n      {},\n      'passport-adapter'\n    )\n    await handleRequestWithMiddleware(req, res, globalMiddleware)\n\n    const configObject: BlitzPassportConfigObject = isFunction(config)\n      ? config({ ctx: (res as any).blitzCtx as Ctx, req, res })\n      : config\n\n    const cookieSessionMiddleware = cookieSession({\n      secret: process.env.SESSION_SECRET_KEY || 'default-dev-secret',\n      secure: process.env.NODE_ENV === 'production' && !isLocalhost(req),\n    })\n\n    const passportMiddleware = passport.initialize()\n\n    const middleware: Middleware[] = [\n      connectMiddleware(cookieSessionMiddleware as ConnectMiddleware),\n      connectMiddleware(passportMiddleware as ConnectMiddleware),\n      connectMiddleware(passport.session()),\n    ]\n\n    if (configObject.secureProxy) {\n      middleware.push(secureProxyMiddleware)\n    }\n\n    assert(\n      req.query.auth,\n      'req.query.auth is not defined. Page must be named [...auth].ts/js. See more at https://blitzjs.com/docs/passportjs#1-add-the-passport-js-api-route'\n    )\n    assert(\n      Array.isArray(req.query.auth),\n      'req.query.auth must be an array. Page must be named [...auth].ts/js. See more at https://blitzjs.com/docs/passportjs#1-add-the-passport-js-api-route'\n    )\n\n    if (!req.query.auth.length) {\n      return res.status(404).end()\n    }\n\n    assert(\n      configObject.strategies.length,\n      'No Passport strategies found! Please add at least one strategy.'\n    )\n\n    const blitzStrategy = configObject.strategies.find(\n      ({ strategy }) => strategy.name === req.query.auth[0]\n    )\n    assert(\n      blitzStrategy,\n      `A passport strategy was not found for: ${req.query.auth[0]}`\n    )\n\n    const { strategy, authenticateOptions } = blitzStrategy\n\n    passport.use(strategy)\n    const strategyName = strategy.name as string\n\n    if (req.query.auth.length === 1) {\n      log.info(`Starting authentication via ${strategyName}...`)\n      console.info(`Starting authentication via ${strategyName}...`)\n      if (req.query.redirectUrl) {\n        // eslint-disable-next-line no-shadow\n        middleware.push(async (req, res, next) => {\n          const session = (res as any).blitzCtx.session as SessionContext\n          assert(session, 'Missing Blitz sessionMiddleware!')\n          await session.$setPublicData({\n            [INTERNAL_REDIRECT_URL_KEY]: req.query.redirectUrl,\n          } as any)\n          return next()\n        })\n      }\n      middleware.push(\n        connectMiddleware(\n          passport.authenticate(strategyName, { ...authenticateOptions })\n        )\n      )\n    } else if (req.query.auth[1] === 'callback') {\n      log.info(`Processing callback for ${strategyName}...`)\n      console.info(`Processing callback for ${strategyName}...`)\n      middleware.push(\n        // eslint-disable-next-line no-shadow\n        connectMiddleware((req, res, next) => {\n          const session = (res as any).blitzCtx.session as SessionContext\n          assert(session, 'Missing Blitz sessionMiddleware!')\n\n          passport.authenticate(\n            strategyName,\n            async (err: any, result: unknown) => {\n              try {\n                let error = err\n\n                if (!error && result === false) {\n                  log.warn(\n                    `Login via ${strategyName} failed - usually this means the user did not authenticate properly with the provider`\n                  )\n                  error = `Login failed`\n                }\n\n                const redirectUrlFromVerifyResult =\n                  result &&\n                  typeof result === 'object' &&\n                  (result as any).redirectUrl\n                let redirectUrl: string =\n                  redirectUrlFromVerifyResult ||\n                  (session.$publicData as any)[INTERNAL_REDIRECT_URL_KEY] ||\n                  (error\n                    ? configObject.errorRedirectUrl\n                    : configObject.successRedirectUrl) ||\n                  '/'\n\n                if (error) {\n                  redirectUrl +=\n                    '?authError=' + encodeURIComponent(error.toString())\n                  res.setHeader('Location', redirectUrl)\n                  res.statusCode = 302\n                  res.end()\n                  return\n                }\n\n                assert(\n                  typeof result === 'object' && result !== null,\n                  `Your '${strategyName}' passport verify callback returned empty data. Ensure you call 'done(null, {publicData: {userId: 1}})' along with any other publicData fields you need)`\n                )\n                assert(\n                  (result as any).publicData,\n                  `'publicData' is missing from your '${strategyName}' passport verify callback. Ensure you call 'done(null, {publicData: {userId: 1}})' along with any other publicData fields you need)`\n                )\n                assert(\n                  isVerifyCallbackResult(result),\n                  'Passport verify callback is invalid'\n                )\n\n                delete (result.publicData as any)[INTERNAL_REDIRECT_URL_KEY]\n\n                await session.$create(result.publicData, result.privateData)\n\n                res.setHeader('Location', redirectUrl)\n                res.statusCode = 302\n                res.end()\n              } catch (error) {\n                console.error(error)\n                res.statusCode = 500\n                res.end()\n              }\n            }\n          )(req, res, next)\n        })\n      )\n    }\n\n    await handleRequestWithMiddleware(req, res, middleware)\n  }\n}\n"],"names":[],"mappings":"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"}