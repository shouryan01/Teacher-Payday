{"version":3,"sources":["../../stdlib-server/auth-utils.ts"],"sourcesContent":["import * as crypto from 'crypto'\nimport { nanoid } from 'next/dist/compiled/nanoid/index.cjs'\nimport { AuthenticationError } from '../stdlib/index'\nimport SecurePasswordLib from 'secure-password'\n\nexport const hash256 = (input: string = '') => {\n  return crypto.createHash('sha256').update(input).digest('hex')\n}\n\nexport const generateToken = (numberOfCharacters: number = 32) =>\n  nanoid(numberOfCharacters)\n\nconst SP = () => new SecurePasswordLib()\n\nexport const SecurePassword = {\n  ...SecurePasswordLib,\n  async hash(password: string | null | undefined) {\n    if (!password) {\n      throw new AuthenticationError()\n    }\n    const hashedBuffer = await SP().hash(Buffer.from(password))\n    return hashedBuffer.toString('base64')\n  },\n  async verify(\n    hashedPassword: string | null | undefined,\n    password: string | null | undefined\n  ) {\n    if (!hashedPassword || !password) {\n      throw new AuthenticationError()\n    }\n    try {\n      const result = await SP().verify(\n        Buffer.from(password),\n        Buffer.from(hashedPassword, 'base64')\n      )\n      // Return result for valid results.\n      switch (result) {\n        case SecurePassword.VALID:\n        case SecurePassword.VALID_NEEDS_REHASH:\n          return result\n        default:\n          // For everything else throw AuthenticationError\n          throw new AuthenticationError()\n      }\n    } catch (error) {\n      // Could be error like failed to hash password\n      throw new AuthenticationError()\n    }\n  },\n}\n"],"names":[],"mappings":";;;;;AAAY,GAAM,CAAN,MAAM;AACK,GAAqC,CAArC,SAAqC;AACxB,GAAiB,CAAjB,MAAiB;AACvB,GAAiB,CAAjB,eAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAExC,KAAK,CAAC,OAAO,IAAI,KAAa,QAAU,CAAC;WALpC,MAAM,CAMF,UAAU,EAAC,MAAQ,GAAE,MAAM,CAAC,KAAK,EAAE,MAAM,EAAC,GAAK;AAC/D,CAAC;QAFY,OAAO,GAAP,OAAO;AAIb,KAAK,CAAC,aAAa,IAAI,kBAA0B,GAAG,EAAE,OARtC,SAAqC,SASnD,kBAAkB;;QADd,aAAa,GAAb,aAAa;AAG1B,KAAK,CAAC,EAAE,OAAS,GAAG,CATU,eAAiB;;AAWxC,KAAK,CAAC,cAAc;GAXG,eAAiB;IAavC,IAAI,EAAC,QAAmC;6CAAE,CAAC;YAC/C,EAAE,GAAG,QAAQ,EAAE,CAAC;gBACd,KAAK,CAAC,GAAG,CAhBqB,MAAiB;YAiBjD,CAAC;YACD,KAAK,CAAC,YAAY,SAAS,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ;mBAClD,YAAY,CAAC,QAAQ,EAAC,MAAQ;QACvC,CAAC;;IACK,MAAM,EACV,cAAyC,EACzC,QAAmC;6CACnC,CAAC;YACD,EAAE,GAAG,cAAc,KAAK,QAAQ,EAAE,CAAC;gBACjC,KAAK,CAAC,GAAG,CA1BqB,MAAiB;YA2BjD,CAAC;gBACG,CAAC;gBACH,KAAK,CAAC,MAAM,SAAS,EAAE,GAAG,MAAM,CAC9B,MAAM,CAAC,IAAI,CAAC,QAAQ,GACpB,MAAM,CAAC,IAAI,CAAC,cAAc,GAAE,MAAQ;gBAEtC,EAAmC,AAAnC,iCAAmC;uBAC3B,MAAM;yBACP,cAAc,CAAC,KAAK;yBACpB,cAAc,CAAC,kBAAkB;+BAC7B,MAAM;;wBAEb,EAAgD,AAAhD,8CAAgD;wBAChD,KAAK,CAAC,GAAG,CAxCiB,MAAiB;;YA0CjD,CAAC,QAAQ,KAAK,EAAE,CAAC;gBACf,EAA8C,AAA9C,4CAA8C;gBAC9C,KAAK,CAAC,GAAG,CA5CqB,MAAiB;YA6CjD,CAAC;QACH,CAAC;;;QAlCU,cAAc,GAAd,cAAc"}