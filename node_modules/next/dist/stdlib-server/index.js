"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.isLocalhost = isLocalhost;
exports.paginate = paginate;
var _exportNames = {
};
var _errors = require("../stdlib/errors");
var _middleware = _interopRequireWildcard(require("./middleware"));
var _authSessions = _interopRequireWildcard(require("./auth-sessions"));
var _authUtils = _interopRequireWildcard(require("./auth-utils"));
var _passportAdapter = _interopRequireWildcard(require("./passport-adapter"));
var _resolver = _interopRequireWildcard(require("./resolver"));
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _asyncToGenerator(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
        return obj;
    } else {
        var newObj = {
        };
        if (obj != null) {
            for(var key in obj){
                if (Object.prototype.hasOwnProperty.call(obj, key)) {
                    var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {
                    };
                    if (desc.get || desc.set) {
                        Object.defineProperty(newObj, key, desc);
                    } else {
                        newObj[key] = obj[key];
                    }
                }
            }
        }
        newObj.default = obj;
        return newObj;
    }
}
function isLocalhost(req) {
    let { host  } = req.headers;
    let localhost = false;
    if (host) {
        host = host.split(':')[0];
        localhost = host === 'localhost';
    }
    return localhost;
}
const isInteger = (value)=>typeof value === 'number' && value % 1 === 0
;
function _paginate() {
    _paginate = _asyncToGenerator(function*({ skip =0 , take =0 , maxTake =250 , count: countQuery , query  }) {
        if (!isInteger(skip)) {
            throw new _errors.PaginationArgumentError('`skip` argument must be a integer');
        }
        if (!isInteger(take)) {
            throw new _errors.PaginationArgumentError('`take` argument must be a integer');
        }
        if (!isInteger(maxTake)) {
            throw new _errors.PaginationArgumentError('`maxTake` argument must be a integer');
        }
        if (typeof countQuery !== 'function') {
            throw new _errors.PaginationArgumentError('`count` argument must be a function');
        }
        if (typeof query !== 'function') {
            throw new _errors.PaginationArgumentError('`query` argument must be a function');
        }
        if (skip < 0) {
            throw new _errors.PaginationArgumentError('`skip` argument must be a positive number');
        }
        if (take < 0) {
            throw new _errors.PaginationArgumentError('`take` argument must be a positive number');
        }
        if (take > maxTake) {
            throw new _errors.PaginationArgumentError('`take` argument must less than `maxTake` which is currently ' + maxTake);
        }
        const [count, items] = yield Promise.all([
            countQuery(),
            query({
                skip,
                take
            }), 
        ]);
        const hasMore = skip + take < count;
        const nextPage = hasMore ? {
            take,
            skip: skip + take
        } : null;
        return {
            items,
            nextPage,
            hasMore,
            count
        };
    });
    return _paginate.apply(this, arguments);
}
function paginate(_) {
    return _paginate.apply(this, arguments);
}
Object.keys(_middleware).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _middleware[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _middleware[key];
        }
    });
});
Object.keys(_authSessions).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _authSessions[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _authSessions[key];
        }
    });
});
Object.keys(_authUtils).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _authUtils[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _authUtils[key];
        }
    });
});
Object.keys(_passportAdapter).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _passportAdapter[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _passportAdapter[key];
        }
    });
});
Object.keys(_resolver).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _resolver[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _resolver[key];
        }
    });
});

//# sourceMappingURL=index.js.map