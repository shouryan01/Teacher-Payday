/// <reference types="node" />
import { IncomingMessage } from 'http';
import { NextApiRequest } from '../shared/lib/utils';
export * from './middleware';
export * from './auth-sessions';
export * from './auth-utils';
export * from './passport-adapter';
export * from './resolver';
export declare function isLocalhost(req: NextApiRequest | IncomingMessage): boolean;
export declare type PaginateArgs<QueryResult> = {
    skip?: number;
    take?: number;
    maxTake?: number;
    count: () => Promise<number>;
    query: (args: {
        skip: number;
        take: number;
    }) => Promise<QueryResult>;
};
export declare function paginate<QueryResult>({ skip, take, maxTake, count: countQuery, query, }: PaginateArgs<QueryResult>): Promise<{
    items: Awaited<QueryResult>;
    nextPage: {
        take: number;
        skip: number;
    } | null;
    hasMore: boolean;
    count: number;
}>;
