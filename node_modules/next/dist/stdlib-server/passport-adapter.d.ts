import type { AuthenticateOptions, Strategy } from 'passport';
import { NextApiHandler, NextApiRequest, NextApiResponse, Ctx, PublicData } from '../shared/lib/utils';
export interface BlitzPassportConfigCallbackParams {
    ctx: Ctx;
    req: NextApiRequest;
    res: NextApiResponse;
}
export declare type BlitzPassportConfigCallback = ({ ctx, req, res, }: BlitzPassportConfigCallbackParams) => BlitzPassportConfigObject;
export declare type BlitzPassportConfig = BlitzPassportConfigObject | BlitzPassportConfigCallback;
export declare type BlitzPassportStrategy = {
    authenticateOptions?: AuthenticateOptions;
    strategy: Strategy;
};
export declare type BlitzPassportConfigObject = {
    successRedirectUrl?: string;
    errorRedirectUrl?: string;
    strategies: BlitzPassportStrategy[];
    secureProxy?: boolean;
};
export declare type VerifyCallbackResult = {
    publicData: PublicData;
    privateData?: Record<string, any>;
    redirectUrl?: string;
};
export declare function passportAuth(config: BlitzPassportConfig): NextApiHandler;
