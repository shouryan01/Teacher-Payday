{"version":3,"sources":["../../stdlib-server/middleware.ts"],"sourcesContent":["import { IncomingMessage, ServerResponse } from 'http'\nimport {\n  getAndValidateMiddleware,\n  handleRequestWithMiddleware,\n} from '../server/middleware'\nimport { prettyMs } from '../server/lib/utils'\nimport {\n  Middleware,\n  MiddlewareNext,\n  MiddlewareRequest,\n  MiddlewareResponse,\n  ConnectMiddleware,\n} from '../shared/lib/utils'\nimport { loadConfigAtRuntime } from '../server/config-shared'\nimport chalk from 'chalk'\nimport { interopDefault } from '../server/load-components'\nimport { AsyncFunc, FirstParam, PromiseReturnType } from '../types/utils'\nimport { baseLogger, newline } from '../server/lib/logging'\nimport { RpcResolver } from '../data-client/rpc'\n\nexport type InvokeWithMiddlewareConfig = {\n  req: IncomingMessage\n  res: ServerResponse\n  middleware?: Middleware[]\n  [prop: string]: any\n}\n\nexport async function invokeWithMiddleware<\n  T extends AsyncFunc,\n  TInput = FirstParam<T>,\n  TResult = PromiseReturnType<T>\n>(\n  resolver: T,\n  params: TInput,\n  ctx: InvokeWithMiddlewareConfig\n): Promise<TResult> {\n  if (!ctx.req) {\n    throw new Error(\n      'You must provide `req` in third argument of invokeWithMiddleware()'\n    )\n  }\n  if (!ctx.res) {\n    throw new Error(\n      'You must provide `res` in third argument of invokeWithMiddleware()'\n    )\n  }\n\n  const rpcResolver = (resolver as unknown) as RpcResolver\n\n  // can be .default._resolverName when user imports with `* as resolver`\n  const resolverName =\n    rpcResolver._resolverName ?? (rpcResolver as any).default?._resolverName\n\n  const config = loadConfigAtRuntime()\n  const middleware = getAndValidateMiddleware(config, rpcResolver, resolverName)\n\n  if (ctx.middleware) {\n    middleware.push(...ctx.middleware)\n  }\n\n  middleware.push(async (_req, res, next) => {\n    const log = baseLogger().getChildLogger({\n      prefix: [resolverName + '()'],\n    })\n    newline()\n    try {\n      log.info(chalk.dim('Starting with input:'), params)\n      const startTime = Date.now()\n\n      const result = await interopDefault(rpcResolver)(params, res.blitzCtx)\n\n      const duration = Date.now() - startTime\n      log.info(chalk.dim(`Finished in ${prettyMs(duration)}`))\n      newline()\n\n      res.blitzResult = result\n      return next()\n    } catch (error) {\n      throw error\n    }\n  })\n\n  await handleRequestWithMiddleware(ctx.req, ctx.res, middleware)\n\n  return (ctx.res as MiddlewareResponse).blitzResult as TResult\n}\n\n/**\n * If the middleware function doesn't declare receiving the `next` callback\n * assume that it's synchronous and invoke `next` ourselves\n */\nfunction noCallbackHandler(\n  req: MiddlewareRequest,\n  res: MiddlewareResponse,\n  next: MiddlewareNext,\n  middleware: ConnectMiddleware\n) {\n  // Cast to any to call with two arguments for connect compatibility\n  ;(middleware as any)(req, res)\n  return next()\n}\n\n/**\n * The middleware function does include the `next` callback so only resolve\n * the Promise when it's called. If it's never called, the middleware stack\n * completion will stall\n */\nfunction withCallbackHandler(\n  req: MiddlewareRequest,\n  res: MiddlewareResponse,\n  next: MiddlewareNext,\n  middleware: ConnectMiddleware\n) {\n  return new Promise((resolve, reject) => {\n    // Rule doesn't matter since we are inside new Promise()\n    //eslint-disable-next-line @typescript-eslint/no-floating-promises\n    middleware(req, res, (err) => {\n      if (err) reject(err)\n      else resolve(next())\n    })\n  })\n}\n\n/**\n * Returns a Blitz middleware function that varies its async logic based on if the\n * given middleware function declares at least 3 parameters, i.e. includes\n * the `next` callback function\n */\nexport function connectMiddleware(middleware: ConnectMiddleware): Middleware {\n  const handler =\n    middleware.length < 3 ? noCallbackHandler : withCallbackHandler\n  return function connectHandler(req: MiddlewareRequest, res, next) {\n    return handler(req, res, next, middleware)\n  } as Middleware\n}\n\nexport const secureProxyMiddleware: Middleware = function (\n  req: MiddlewareRequest,\n  _res: MiddlewareResponse,\n  next: (error?: Error) => void\n) {\n  req.protocol = 'https'\n  next()\n}\n"],"names":[],"mappings":"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"}