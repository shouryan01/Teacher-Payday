"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "Routes", {
    enumerable: true,
    get: function() {
        return _blitz.Routes;
    }
});
Object.defineProperty(exports, "Router", {
    enumerable: true,
    get: function() {
        return _router.default;
    }
});
Object.defineProperty(exports, "BlitzRouter", {
    enumerable: true,
    get: function() {
        return _router.BlitzRouter;
    }
});
Object.defineProperty(exports, "SingletonRouter", {
    enumerable: true,
    get: function() {
        return _router.SingletonRouter;
    }
});
Object.defineProperty(exports, "RouterEvent", {
    enumerable: true,
    get: function() {
        return _router.RouterEvent;
    }
});
Object.defineProperty(exports, "withRouter", {
    enumerable: true,
    get: function() {
        return _router.withRouter;
    }
});
Object.defineProperty(exports, "useRouter", {
    enumerable: true,
    get: function() {
        return _router.useRouter;
    }
});
Object.defineProperty(exports, "useRouterQuery", {
    enumerable: true,
    get: function() {
        return _router.useRouterQuery;
    }
});
Object.defineProperty(exports, "useParams", {
    enumerable: true,
    get: function() {
        return _router.useParams;
    }
});
Object.defineProperty(exports, "useParam", {
    enumerable: true,
    get: function() {
        return _router.useParam;
    }
});
Object.defineProperty(exports, "RouterContext", {
    enumerable: true,
    get: function() {
        return _routerContext.RouterContext;
    }
});
exports.differenceInMilliseconds = differenceInMilliseconds;
exports.differenceInMinutes = differenceInMinutes;
exports.addMilliseconds = addMilliseconds;
exports.addMinutes = addMinutes;
exports.addYears = addYears;
exports.readCookie = readCookie;
var _exportNames = {
    isServer: true,
    isClient: true,
    isPast: true,
    setCookie: true,
    deleteCookie: true
};
exports.deleteCookie = exports.setCookie = exports.isClient = exports.isServer = exports.isPast = void 0;
var _blitz = require(".blitz");
var _errors = _interopRequireWildcard(require("./errors"));
var _zodUtils = _interopRequireWildcard(require("./zod-utils"));
var _prismaUtils = _interopRequireWildcard(require("./prisma-utils"));
var _errorBoundary = _interopRequireWildcard(require("./error-boundary"));
var _blitzAppRoot = _interopRequireWildcard(require("./blitz-app-root"));
var _router = _interopRequireWildcard(require("../client/router"));
var _routerContext = require("../shared/lib/router-context");
function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
        return obj;
    } else {
        var newObj = {
        };
        if (obj != null) {
            for(var key in obj){
                if (Object.prototype.hasOwnProperty.call(obj, key)) {
                    var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {
                    };
                    if (desc.get || desc.set) {
                        Object.defineProperty(newObj, key, desc);
                    } else {
                        newObj[key] = obj[key];
                    }
                }
            }
        }
        newObj.default = obj;
        return newObj;
    }
}
const isServer = typeof window === 'undefined';
exports.isServer = isServer;
const isClient = typeof window !== 'undefined';
exports.isClient = isClient;
const MILLISECONDS_IN_MINUTE = 60000;
const MINUTES_IN_YEAR = 525960;
const isPast = (date)=>{
    return date.getTime() < Date.now();
};
exports.isPast = isPast;
function differenceInMilliseconds(dateLeft, dateRight) {
    return dateLeft.getTime() - dateRight.getTime();
}
function differenceInMinutes(dateLeft, dateRight) {
    const diff = differenceInMilliseconds(dateLeft, dateRight) / MILLISECONDS_IN_MINUTE;
    return diff > 0 ? Math.floor(diff) : Math.ceil(diff);
}
function addMilliseconds(date, amount) {
    const timestamp = date.getTime();
    const cleanAmount = toInteger(amount);
    return new Date(timestamp + cleanAmount);
}
function addMinutes(date, amount) {
    const cleanAmount = toInteger(amount);
    return addMilliseconds(date, cleanAmount * MILLISECONDS_IN_MINUTE);
}
function addYears(date, amount) {
    const cleanAmount = toInteger(amount);
    return addMinutes(date, cleanAmount * MINUTES_IN_YEAR);
}
function toInteger(dirtyNumber) {
    if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {
        return NaN;
    }
    const number = Number(dirtyNumber);
    if (isNaN(number)) {
        return number;
    }
    return number < 0 ? Math.ceil(number) : Math.floor(number);
}
function readCookie(name) {
    if (typeof document === 'undefined') return null;
    const cookie = document.cookie;
    const setPos = cookie.search(new RegExp('\\b' + name + '='));
    const stopPos = cookie.indexOf(';', setPos);
    let res;
    if (!~setPos) return null;
    res = decodeURIComponent(cookie.substring(setPos, ~stopPos ? stopPos : undefined).split('=')[1]);
    return res.charAt(0) === '{' ? JSON.parse(res) : res;
}
const setCookie = (name, value, expires)=>{
    const result = `${name}=${value};path=/;expires=${expires}`;
    document.cookie = result;
};
exports.setCookie = setCookie;
const deleteCookie = (name)=>setCookie(name, '', 'Thu, 01 Jan 1970 00:00:01 GMT')
;
exports.deleteCookie = deleteCookie;
Object.keys(_errors).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _errors[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _errors[key];
        }
    });
});
Object.keys(_zodUtils).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _zodUtils[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _zodUtils[key];
        }
    });
});
Object.keys(_prismaUtils).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _prismaUtils[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _prismaUtils[key];
        }
    });
});
Object.keys(_errorBoundary).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _errorBoundary[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _errorBoundary[key];
        }
    });
});
Object.keys(_blitzAppRoot).forEach(function(key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    if (key in exports && exports[key] === _blitzAppRoot[key]) return;
    Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
            return _blitzAppRoot[key];
        }
    });
});

//# sourceMappingURL=index.js.map