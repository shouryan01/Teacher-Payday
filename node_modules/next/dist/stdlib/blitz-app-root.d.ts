import { AppProps, BlitzPage } from '../types/index';
import React, { ComponentPropsWithoutRef, FC } from 'react';
import { HydrateOptions } from 'react-query/hydration';
import { QueryClient } from 'react-query';
export declare type BlitzProviderProps = {
    client?: QueryClient;
    contextSharing?: boolean;
    dehydratedState?: unknown;
    hydrateOptions?: HydrateOptions;
};
export declare const BlitzProvider: FC<BlitzProviderProps>;
export declare const NoPageFlicker: () => JSX.Element;
export declare function getAuthValues(Page: BlitzPage, props: ComponentPropsWithoutRef<BlitzPage>): {
    authenticate?: undefined;
    redirectAuthenticatedTo?: undefined;
} | {
    authenticate: any;
    redirectAuthenticatedTo: any;
};
export declare function withBlitzInnerWrapper(Page: BlitzPage): {
    (props: ComponentPropsWithoutRef<BlitzPage>): JSX.Element;
    displayName: string;
};
export declare function BlitzWrapper({ children, appProps, }: React.PropsWithChildren<{
    appProps: AppProps;
}>): JSX.Element;
