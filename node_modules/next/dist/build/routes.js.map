{"version":3,"sources":["../../build/routes.ts"],"sourcesContent":["import { promises } from 'fs'\nimport { NextConfigComplete } from '../server/config-shared'\nimport { createPagesMapping } from './entries'\nimport { collectPages, getIsRpcFile } from './utils'\nimport { newline, baseLogger } from '../server/lib/logging'\nimport { isInternalBlitzMonorepoDevelopment } from '../server/utils'\nimport { join, dirname } from 'path'\nimport { outputFile } from 'fs-extra'\nimport findUp from 'next/dist/compiled/find-up'\nimport resolveFrom from 'resolve-from'\nconst readFile = promises.readFile\nconst manifestDebug = require('debug')('blitz:manifest')\n\nexport type RouteType = 'page' | 'rpc' | 'api'\nexport type RouteVerb = 'get' | 'post' | 'patch' | 'head' | 'delete' | '*'\nexport type RouteCacheEntry = {\n  filePath: string\n  route: string\n  verb: string\n  type: RouteType\n}\n\nfunction getVerb(type: RouteType): RouteVerb {\n  switch (type) {\n    case 'api':\n      return '*'\n    case 'rpc':\n      return 'post'\n    default:\n      return 'get'\n  }\n}\n\n// from https://github.com/angus-c/just/blob/master/packages/array-partition/index.js\nfunction partition(arr: any[], predicate: (value: any) => boolean) {\n  if (!Array.isArray(arr)) {\n    throw new Error('expected first argument to be an array')\n  }\n  if (typeof predicate != 'function') {\n    throw new Error('expected second argument to be a function')\n  }\n  var first = []\n  var second = []\n  var length = arr.length\n  for (var i = 0; i < length; i++) {\n    var nextValue = arr[i]\n    if (predicate(nextValue)) {\n      first.push(nextValue)\n    } else {\n      second.push(nextValue)\n    }\n  }\n  return [first, second]\n}\n\nconst apiPathRegex = /([\\\\/]api[\\\\/])/\n\nexport async function collectAllRoutes(\n  directory: string,\n  config: NextConfigComplete\n) {\n  const routeFiles = await collectPages(directory, config.pageExtensions!)\n  const rawRouteMappings = createPagesMapping(\n    routeFiles,\n    config.pageExtensions!\n  )\n  const routes: RouteCacheEntry[] = []\n  for (const [route, filePath] of Object.entries(rawRouteMappings)) {\n    if (['/_app', '/_document', '/_error'].includes(route)) continue\n    let type: RouteType\n    if (getIsRpcFile(filePath)) {\n      type = 'rpc'\n    } else if (apiPathRegex.test(filePath)) {\n      type = 'api'\n    } else {\n      type = 'page'\n    }\n    routes.push({\n      filePath: filePath.replace('private-next-pages/', ''),\n      route,\n      type,\n      verb: getVerb(type),\n    })\n  }\n  return routes\n}\n\ntype Parameter = {\n  name: string\n  optional: boolean\n}\ninterface RouteManifestEntry {\n  name: string\n  parameters: Parameter[]\n  multipleParameters: Parameter[]\n  mdx?: boolean\n}\n\nconst pascalCase = (value: string): string => {\n  const val = value.replace(/[-_\\s/.]+(.)?/g, (_match, chr) =>\n    chr ? chr.toUpperCase() : ''\n  )\n  return val.substr(0, 1).toUpperCase() + val.substr(1)\n}\n\nexport async function saveRouteManifest(\n  directory: string,\n  config: NextConfigComplete\n) {\n  const allRoutes = await collectAllRoutes(directory, config)\n  const routes: Record<string, RouteManifestEntry> = {}\n\n  for (let { filePath, route, type } of allRoutes) {\n    if (type === 'api' || type === 'rpc') continue\n\n    if (/\\.mdx$/.test(filePath)) {\n      routes[route] = {\n        ...parseParametersFromRoute(route),\n        name: route === '/' ? 'Index' : pascalCase(route),\n        mdx: true,\n      }\n    } else {\n      const fileContents = await readFile(join(directory, filePath), {\n        encoding: 'utf-8',\n      })\n\n      const defaultExportName = parseDefaultExportName(fileContents)\n      if (!defaultExportName) continue\n\n      routes[route] = {\n        ...parseParametersFromRoute(route),\n        name: defaultExportName,\n      }\n    }\n  }\n\n  const { declaration, implementation } = generateManifest(routes)\n\n  const dotBlitz = join(await findNodeModulesRoot(directory), '.blitz')\n\n  await outputFile(join(dotBlitz, 'index.js'), implementation, {\n    encoding: 'utf-8',\n  })\n  await outputFile(join(dotBlitz, 'index-browser.js'), implementation, {\n    encoding: 'utf-8',\n  })\n  await outputFile(join(dotBlitz, 'index.d.ts'), declaration, {\n    encoding: 'utf-8',\n  })\n}\n\nasync function findNodeModulesRoot(src: string) {\n  /*\n   *  Because of our package structure, and because of how things like pnpm link modules,\n   *  we must first find blitz package, and then find `next` and then\n   *  the root of `next`\n   *\n   *  This is because we import from `.blitz` inside `next/stdlib`.\n   *  If that changes, then this logic here will need to change\n   */\n  manifestDebug('src ' + src)\n  let root: string\n  if (process.env.NEXT_PNPM_TEST) {\n    const nextPkgLocation = dirname(\n      (await findUp('package.json', {\n        cwd: resolveFrom(src, 'next'),\n      })) ?? ''\n    )\n    manifestDebug('nextPkgLocation ' + nextPkgLocation)\n    if (!nextPkgLocation) {\n      throw new Error(\n        \"Internal Blitz Error: unable to find 'next' package location\"\n      )\n    }\n    root = join(nextPkgLocation, '../')\n  } else if (isInternalBlitzMonorepoDevelopment) {\n    root = join(src, 'node_modules')\n  } else {\n    const blitzPkgLocation = dirname(\n      (await findUp('package.json', {\n        cwd: resolveFrom(src, 'blitz'),\n      })) ?? ''\n    )\n    manifestDebug('blitzPkgLocation ' + blitzPkgLocation)\n    if (!blitzPkgLocation) {\n      throw new Error(\n        \"Internal Blitz Error: unable to find 'blitz' package location\"\n      )\n    }\n    const nextPkgLocation = dirname(\n      (await findUp('package.json', {\n        cwd: resolveFrom(blitzPkgLocation, 'next'),\n      })) ?? ''\n    )\n    manifestDebug('nextPkgLocation ' + nextPkgLocation)\n    if (!nextPkgLocation) {\n      throw new Error(\n        \"Internal Blitz Error: unable to find 'next' package location\"\n      )\n    }\n    root = join(nextPkgLocation, '../')\n    if (root.endsWith('@blitzjs/')) {\n      root = join(nextPkgLocation, '../../')\n    }\n  }\n  manifestDebug('root ' + root)\n  return root\n}\n\nexport function parseDefaultExportName(contents: string): string | null {\n  const result = contents.match(\n    /export\\s+default(?:\\s+(?:const|let|class|var|function))?\\s+(\\w+)/\n  )\n  if (!result) {\n    return null\n  }\n\n  return result[1] ?? null\n}\n\nfunction dedupeBy<T>(\n  arr: [string, T][],\n  by: (v: [string, T]) => string\n): [string, T][] {\n  const allKeys = arr.map(by)\n  const countKeys = allKeys.reduce(\n    (obj, key) => ({ ...obj, [key]: (obj[key] || 0) + 1 }),\n    {} as { [key: string]: number }\n  )\n  const duplicateKeys = Object.keys(countKeys).filter(\n    (key) => countKeys[key] > 1\n  )\n\n  if (duplicateKeys.length) {\n    newline()\n    const log = baseLogger({ displayDateTime: false }).getChildLogger()\n\n    duplicateKeys.forEach((key) => {\n      let errorMessage = `The page component is named \"${key}\" on the following routes:\\n\\n`\n      arr\n        .filter((v) => by(v) === key)\n        .forEach(([route]) => {\n          errorMessage += `\\t${route}\\n`\n        })\n      log.error(errorMessage)\n    })\n\n    console.error(\n      'The page component must have a unique name across all routes, so change the component names so they are all unique.\\n'\n    )\n\n    // Don't throw error in internal monorepo development because existing nextjs\n    // integration tests all have duplicate page names\n    if (\n      process.env.NODE_ENV === 'production' &&\n      !isInternalBlitzMonorepoDevelopment\n    ) {\n      const error = Error('Duplicate Page Name')\n      delete error.stack\n      throw error\n    }\n  }\n\n  return arr.filter((v) => !duplicateKeys.includes(by(v)))\n}\n\nexport function generateManifest(\n  routes: Record<string, RouteManifestEntry>\n): { implementation: string; declaration: string } {\n  const routesWithoutDuplicates = dedupeBy(\n    Object.entries(routes),\n    ([_path, { name }]) => name\n  )\n\n  const implementationLines = routesWithoutDuplicates.map(\n    ([path, { name }]) => `${name}: (query) => ({ pathname: \"${path}\", query })`\n  )\n\n  const declarationLines = routesWithoutDuplicates.map(\n    ([_path, { name, parameters, multipleParameters }]) => {\n      if (parameters.length === 0 && multipleParameters.length === 0) {\n        return `${name}(query?: ParsedUrlQueryInput): RouteUrlObject`\n      }\n\n      return `${name}(query: { ${[\n        ...parameters.map(\n          (param) =>\n            param.name + (param.optional ? '?' : '') + ': string | number'\n        ),\n        ...multipleParameters.map(\n          (param) =>\n            param.name + (param.optional ? '?' : '') + ': (string | number)[]'\n        ),\n      ].join('; ')} } & ParsedUrlQueryInput): RouteUrlObject`\n    }\n  )\n\n  const declarationEnding = declarationLines.length > 0 ? ';' : ''\n\n  const moduleName = process.env.NEXT_PNPM_TEST ? 'next/types' : 'blitz'\n\n  return {\n    implementation:\n      'exports.Routes = {\\n' +\n      implementationLines.map((line) => '  ' + line).join(',\\n') +\n      '\\n}',\n    declaration: `\nimport type { ParsedUrlQueryInput } from \"querystring\"\nimport type { RouteUrlObject } from \"${moduleName}\"\n\nexport const Routes: {\n${declarationLines.map((line) => '  ' + line).join(';\\n') + declarationEnding}\n}`.trim(),\n  }\n}\n\nfunction removeSquareBracketsFromSegments(value: string): string\n\nfunction removeSquareBracketsFromSegments(value: string[]): string[]\n\nfunction removeSquareBracketsFromSegments(\n  value: string | string[]\n): string | string[] {\n  if (typeof value === 'string') {\n    return value.replace('[', '').replace(']', '')\n  }\n  return value.map((val) => val.replace('[', '').replace(']', ''))\n}\n\nconst squareBracketsRegex = /\\[\\[.*?\\]\\]|\\[.*?\\]/g\n\nexport function parseParametersFromRoute(\n  path: string\n): Pick<RouteManifestEntry, 'parameters' | 'multipleParameters'> {\n  const parameteredSegments = path.match(squareBracketsRegex) ?? []\n  const withoutBrackets = removeSquareBracketsFromSegments(parameteredSegments)\n\n  const [multipleParameters, parameters] = partition(withoutBrackets, (p) =>\n    p.includes('...')\n  )\n\n  return {\n    parameters: parameters.map((value) => {\n      const containsSquareBrackets = squareBracketsRegex.test(value)\n      if (containsSquareBrackets) {\n        return {\n          name: removeSquareBracketsFromSegments(value),\n          optional: true,\n        }\n      }\n\n      return {\n        name: value,\n        optional: false,\n      }\n    }),\n    multipleParameters: multipleParameters.map((param) => {\n      const withoutEllipsis = param.replace('...', '')\n      const containsSquareBrackets = squareBracketsRegex.test(withoutEllipsis)\n\n      if (containsSquareBrackets) {\n        return {\n          name: removeSquareBracketsFromSegments(withoutEllipsis),\n          optional: true,\n        }\n      }\n\n      return {\n        name: withoutEllipsis,\n        optional: false,\n      }\n    }),\n  }\n}\n"],"names":[],"mappings":"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"}