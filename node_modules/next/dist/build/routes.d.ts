import { NextConfigComplete } from '../server/config-shared';
export declare type RouteType = 'page' | 'rpc' | 'api';
export declare type RouteVerb = 'get' | 'post' | 'patch' | 'head' | 'delete' | '*';
export declare type RouteCacheEntry = {
    filePath: string;
    route: string;
    verb: string;
    type: RouteType;
};
export declare function collectAllRoutes(directory: string, config: NextConfigComplete): Promise<RouteCacheEntry[]>;
declare type Parameter = {
    name: string;
    optional: boolean;
};
interface RouteManifestEntry {
    name: string;
    parameters: Parameter[];
    multipleParameters: Parameter[];
    mdx?: boolean;
}
export declare function saveRouteManifest(directory: string, config: NextConfigComplete): Promise<void>;
export declare function parseDefaultExportName(contents: string): string | null;
export declare function generateManifest(routes: Record<string, RouteManifestEntry>): {
    implementation: string;
    declaration: string;
};
export declare function parseParametersFromRoute(path: string): Pick<RouteManifestEntry, 'parameters' | 'multipleParameters'>;
export {};
