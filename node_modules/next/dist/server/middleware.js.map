{"version":3,"sources":["../../server/middleware.ts"],"sourcesContent":["import { NextApiRequest, NextApiResponse } from '../shared/lib/utils'\nimport { IncomingMessage, ServerResponse } from 'http'\nimport { NextConfig } from './config-shared'\nimport {\n  Ctx,\n  Middleware,\n  MiddlewareRequest,\n  MiddlewareResponse,\n} from '../shared/lib/utils'\nimport { baseLogger, newline } from './lib/logging'\nconst debug = require('debug')('blitz:middleware')\n\nexport function getAndValidateMiddleware(\n  config: NextConfig,\n  resolverModule: any,\n  route: string\n) {\n  const middleware: Middleware[] = []\n  debug('[getAndValidateMiddleware] config.middleware', config.middleware)\n  if (config.middleware) {\n    if (!Array.isArray(config.middleware)) {\n      throw new Error(\"'middleware' in blitz.config.js must be an array\")\n    }\n    middleware.push(...config.middleware)\n  }\n  debug(\n    '[getAndValidateMiddleware] resolverModule.middleware',\n    resolverModule.middleware\n  )\n  if (resolverModule.middleware) {\n    if (!Array.isArray(resolverModule.middleware)) {\n      throw new Error(`'middleware' exported from ${route} must be an array`)\n    }\n    middleware.push(...resolverModule.middleware)\n  }\n  return middleware\n}\n\n// TODO - can we simplify this function?\nexport async function handleRequestWithMiddleware(\n  req: NextApiRequest | IncomingMessage,\n  res: NextApiResponse | ServerResponse,\n  middleware: Middleware[],\n  {\n    throwOnError = true,\n    stackPrintOnError = true,\n  }: {\n    throwOnError?: boolean\n    stackPrintOnError?: boolean\n  } = {}\n) {\n  const log = baseLogger().getChildLogger()\n\n  if (!(res as MiddlewareResponse).blitzCtx) {\n    ;(res as MiddlewareResponse).blitzCtx = {} as Ctx\n  }\n  if (!(res as any)._blitz) {\n    ;(res as any)._blitz = {}\n  }\n\n  let handler = compose(middleware)\n\n  try {\n    await handler(\n      req as MiddlewareRequest,\n      res as MiddlewareResponse,\n      (error) => {\n        if (error) {\n          throw error\n        }\n      }\n    )\n  } catch (error) {\n    newline()\n    if (res.writableFinished) {\n      log.error(\n        'Error occured in middleware after the response was already sent to the browser'\n      )\n    } else {\n      log.error('Error while processing the request')\n    }\n    if (error._clearStack) {\n      delete error.stack\n    }\n    if (stackPrintOnError) {\n      log.prettyError(error)\n    } else {\n      log.prettyError(error, true, false, false)\n    }\n    newline()\n    if (throwOnError) throw error\n  }\n}\n\n// -------------------------------------------------------------------------------\n// This takes an array of middleware and composes them into a single middleware fn\n// This is what makes `next()` and `await next()` work\n// -------------------------------------------------------------------------------\nexport function compose(middleware: Middleware[]) {\n  if (!Array.isArray(middleware)) {\n    throw new TypeError('Middleware stack must be an array!')\n  }\n\n  for (const handler of middleware) {\n    if (typeof handler !== 'function') {\n      throw new TypeError('Middleware must be composed of functions!')\n    }\n  }\n\n  // Return a single middleware function that composes everything passed in\n  return function (req, res, next): Promise<any> {\n    // last called middleware #\n    let index = -1\n\n    function dispatch(i: number, error?: any): Promise<void> {\n      if (error) {\n        return Promise.reject(error)\n      }\n\n      if (i <= index) throw new Error('next() called multiple times')\n      index = i\n\n      let handler = middleware[i]\n      if (!handler) {\n        return Promise.resolve()\n      }\n\n      try {\n        debug(`[${handler.name}] Starting handler...`)\n        return Promise.resolve(handler(req, res, dispatch.bind(null, i + 1)))\n      } catch (err) {\n        return Promise.reject(err)\n      }\n    }\n\n    // return next(result as any)\n    return dispatch(0).then(next as any)\n  } as Middleware\n}\n"],"names":[],"mappings":"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"}