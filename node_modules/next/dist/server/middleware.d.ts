/// <reference types="node" />
import { NextApiRequest, NextApiResponse } from '../shared/lib/utils';
import { IncomingMessage, ServerResponse } from 'http';
import { NextConfig } from './config-shared';
import { Middleware } from '../shared/lib/utils';
export declare function getAndValidateMiddleware(config: NextConfig, resolverModule: any, route: string): Middleware[];
export declare function handleRequestWithMiddleware(req: NextApiRequest | IncomingMessage, res: NextApiResponse | ServerResponse, middleware: Middleware[], { throwOnError, stackPrintOnError, }?: {
    throwOnError?: boolean;
    stackPrintOnError?: boolean;
}): Promise<void>;
export declare function compose(middleware: Middleware[]): Middleware;
