{"version":3,"sources":["../../../lib/eslint/getLintIntent.ts"],"sourcesContent":["import { promises as fs } from 'fs'\n\nimport * as CommentJson from 'next/dist/compiled/comment-json'\n\nexport type LintIntent = { firstTimeSetup: boolean }\n\nexport async function getLintIntent(\n  eslintrcFile: string | null,\n  pkgJsonEslintConfig: string | null\n): Promise<LintIntent | false> {\n  if (eslintrcFile) {\n    const content = await fs.readFile(eslintrcFile, { encoding: 'utf8' }).then(\n      (txt) => txt.trim().replace(/\\n/g, ''),\n      () => null\n    )\n\n    // User is setting up ESLint for the first time setup if eslint config exists but is empty\n    return {\n      firstTimeSetup:\n        content === '' ||\n        content === '{}' ||\n        content === '---' ||\n        content === 'module.exports = {}',\n    }\n  } else if (pkgJsonEslintConfig) {\n    return {\n      firstTimeSetup: CommentJson.stringify(pkgJsonEslintConfig) === '{}',\n    }\n  }\n\n  return false\n}\n"],"names":[],"mappings":";;;;QAMsB,aAAa,GAAb,aAAa;AANJ,GAAI,CAAJ,GAAI;AAEvB,GAAW,CAAX,WAAW;;;;;;;;;;;;;;;;;;;;;;;;eAID,aAAa,CACjC,YAA2B,EAC3B,mBAAkC,EACL,CAAC;IAC9B,EAAE,EAAE,YAAY,EAAE,CAAC;QACjB,KAAK,CAAC,OAAO,SAXc,GAAI,UAWN,QAAQ,CAAC,YAAY;YAAI,QAAQ,GAAE,IAAM;WAAI,IAAI,EACvE,GAAG,GAAK,GAAG,CAAC,IAAI,GAAG,OAAO;cACrB,IAAI;;QAGZ,EAA0F,AAA1F,wFAA0F;;YAExF,cAAc,EACZ,OAAO,WACP,OAAO,MAAK,EAAI,KAChB,OAAO,MAAK,GAAK,KACjB,OAAO,MAAK,mBAAqB;;IAEvC,CAAC,MAAM,EAAE,EAAE,mBAAmB,EAAE,CAAC;;YAE7B,cAAc,EAxBR,WAAW,CAwBW,SAAS,CAAC,mBAAmB,OAAM,EAAI;;IAEvE,CAAC;WAEM,KAAK;AACd,CAAC"}